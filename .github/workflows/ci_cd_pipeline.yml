name: CI/CD Pipeline

env:
  # DOCKER_IMAGE_NAME: your-username/your-image-name
  # DOCKER_REGISTRY_USERNAME: your-username
  # DOCKER_REGISTRY_PASSWORD: your-password
  DOCKER_IMAGE_NAME: szaitman/maven-hello-world
  DOCKER_REGISTRY_USERNAME: szaitman
  # DOCKER_REGISTRY_PASSWORD: your-password
on:
  # pull_request:
  #   # types: [closed]
  #   branches: [main]
  workflow_dispatch:  # Trigger manually
  push:
    branches:
      - main  # Trigger on push to main branch

jobs:
  increment-version:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: myapp  # Set the default working directory for all steps in this job

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Java environment
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      # Run Maven to increment the minor version
      - name: Increment version
        run: mvn versions:set -DnewVersion=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | awk -F. '{$3+=1; $3=0; print $1"."$2"."$3}') -DgenerateBackupPoms=false
      # mvn versions:set -DnewVersion=patch

      # Get the current version 
      - name: Get the new version 
        # id: version_step
        run: |
          new_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "New version: $new_version"
          echo "DOCKER_IMAGE_TAG=$new_version" >> $GITHUB_ENV

      - name: Print Variable
        run: echo "DOCKER_IMAGE_TAG ${{ env.DOCKER_IMAGE_TAG }}"
          
      # # Commit and push the changes
      # - name: Commit and push version bump
      #   run: |
      #     git config --global user.name 'github-actions'
      #     git config --global user.email 'github-actions@github.com'
      #     git add pom.xml
      #     git commit -m 'Increment minor version'
      #     git push origin main

  build-and-push:
    runs-on: ubuntu-latest
    needs: increment-version
    defaults:
      run:
        working-directory: myapp  # Set the default working directory for all steps in this job
    steps:
      - uses: actions/checkout@v3

      - name: Print Variable
        run: echo "DOCKER_IMAGE_TAG ${{ env.DOCKER_IMAGE_TAG }}"
          
      - name: Build the Docker Image
        # run: docker build -t your-username/your-image-name:latest .
        run: docker build -t ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }} .

      - name: Run Docker for test
        run: docker run ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }} .


      - name: Log in to Docker Registry
        # run: docker login -u your-username -p your-password
        run: docker login -u your-username -p ${{ secrets.DOCKER_HUB_TOKEN }}


      - name: Push the Docker Image
        run: docker push  ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v3
      - name: Configure kubectl
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Apply Kubernetes Manifest
        run: sed -e  "s/DOCKER_IMAGE_TAG/${{ env.DOCKER_IMAGE_TAG }}/" deployment.yaml | kubectl apply -f -


  # run-container:
  #   runs-on: ubuntu-latest
  #   # defaults:
  #   #   run:
  #   #     working-directory: myapp  # Set the default working directory for all steps in this job

  #   needs: build-and-push
  #   steps:
  #     - name: Pull the Docker Image
  #       run: docker pull your-username/your-image-name:latest

  #     - name: Run the Docker Container
  #       run: docker run -it --rm your-username/your-image-name:latest


